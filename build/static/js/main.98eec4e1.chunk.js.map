{"version":3,"sources":["Components/Controls/Controls.module.css","Components/TransactionHistory/TransactionHistory.module.css","Containers/Dashboard/Dashboard.module.css","Components/Balance/Balance.module.css","Components/Controls/Controls.jsx","Components/Balance/Balance.jsx","Components/TransactionHistory/TransactionHistory.jsx","Containers/Dashboard/Dashboard.jsx","Components/App/App.jsx","index.js"],"names":["module","exports","Controls","state","amount","handleChange","e","setState","target","name","Number","value","handleSubmitAdd","event","preventDefault","props","onAddTransaction","className","styles","form","type","onInput","this","controls","onClick","Component","Balance","handleTotalAmount","balance","BalanceWrapper","clientBalance","clientBalance__col","toFixed","defaultProps","TransactionHistory","items","table","length","map","el","key","id","date","uuidv4","require","Dashboard","transactions","notifyNoInputValue","toast","notifyNoCost","addDateTransaction","Date","toLocaleDateString","year","month","day","hour","minute","second","trans","transaction","parentNode","reset","filter","reduce","acc","prevTransactions","localStorage","getItem","prevBalance","JSON","parse","prevProps","prevState","setItem","stringify","DashboardWrapper","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98eec4e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Controls_form__m1YjM\",\"controls\":\"Controls_controls__1bybP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TransactionHistory_table__16cWo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DashboardWrapper\":\"Dashboard_DashboardWrapper__2ydPZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BalanceWrapper\":\"Balance_BalanceWrapper__34ob_\",\"clientBalance\":\"Balance_clientBalance__14P-s\",\"clientBalance__col\":\"Balance_clientBalance__col__1CzFy\"};","/* eslint-disable react/state-in-constructor */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Controls.module.css';\n\nexport default class Controls extends Component {\n  state = {\n    amount: 0,\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: Number(e.target.value),\n    });\n  };\n\n  handleSubmitAdd = event => {\n    event.preventDefault();\n    this.props.onAddTransaction({ ...this.state }, event);\n    this.setState({ amount: 0 });\n  };\n\n  render() {\n    return (\n      <form className={styles.form}>\n        <input type=\"number\" name=\"amount\" onInput={this.handleChange} />\n        <button\n          className={styles.controls}\n          type=\"submit\"\n          name=\"deposit\"\n          onClick={this.handleSubmitAdd}\n        >\n          Deposit\n        </button>\n        <button\n          className={styles.controls}\n          type=\"submit\"\n          name=\"withdrawal\"\n          onClick={this.handleSubmitAdd}\n        >\n          Withdraw\n        </button>\n      </form>\n    );\n  }\n}\n\nControls.propTypes = {\n  onAddTransaction: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Balance.module.css';\n\nconst Balance = ({ handleTotalAmount, balance }) => (\n  <div className={styles.BalanceWrapper}>\n    <div className={styles.clientBalance}>\n      <div className={styles.clientBalance__col}>\n        &#8593;{handleTotalAmount('deposit').toFixed(2)}&#36;\n      </div>\n      <div className={styles.clientBalance__col}>\n        &#8595;{handleTotalAmount('withdrawal').toFixed(2)}&#36;\n      </div>\n      <div className={styles.clientBalance__col}>\n        Balance: {balance.toFixed(2)}&#36;\n      </div>\n    </div>\n  </div>\n);\n\nBalance.propTypes = {\n  handleTotalAmount: PropTypes.func.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nBalance.defaultProps = {\n  // bla: 'test',\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => (\n  <div className=\"TransactionHistoryWrapper\">\n    <table className={styles.table}>\n      <thead>\n        <tr>\n          <td>TRANSACTION</td>\n          <td>AMOUNT</td>\n          <td>DATE</td>\n        </tr>\n      </thead>\n      <tbody>\n        {items.length > 0 &&\n          items.map(el => (\n            <tr key={el.id}>\n              <td>{el.type}</td>\n              <td>{Number(el.amount).toFixed(2)}&#36;</td>\n              <td>{el.date}</td>\n            </tr>\n          ))}\n      </tbody>\n    </table>\n  </div>\n);\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","/* eslint-disable react/state-in-constructor */\nimport React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Controls from '../../Components/Controls/Controls';\nimport Balance from '../../Components/Balance/Balance';\nimport TransactionHistory from '../../Components/TransactionHistory/TransactionHistory';\nimport 'react-toastify/dist/ReactToastify.css';\nimport styles from './Dashboard.module.css';\n\nconst uuidv4 = require('uuid/v4');\n\nexport default class Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n  };\n\n  componentDidMount() {\n    const prevTransactions = localStorage.getItem('transactions');\n    const prevBalance = localStorage.getItem('balance');\n\n    if (prevTransactions) {\n      const transactions = JSON.parse(prevTransactions);\n\n      this.setState({ transactions });\n    }\n    if (prevBalance) {\n      const balance = JSON.parse(prevBalance);\n\n      this.setState({ balance });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { transactions, balance } = this.state;\n\n    if (prevState.transactions !== transactions) {\n      localStorage.setItem('transactions', JSON.stringify(transactions));\n    }\n    if (prevState.balance !== balance) {\n      localStorage.setItem('balance', JSON.stringify(balance));\n    }\n  }\n\n  notifyNoInputValue = () => toast('Введите сумму для проведения операции!');\n\n  notifyNoCost = () =>\n    toast('На счету недостаточно средств для проведения операции!');\n\n  addDateTransaction = () => {\n    const options = {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric',\n    };\n    return new Date().toLocaleDateString('en-US', options);\n  };\n\n  onAddTransaction = (trans, event) => {\n    const { name } = event;\n    const transaction = {\n      amount: trans.amount,\n      id: uuidv4(),\n      type: event.target.name,\n      date: this.addDateTransaction(),\n    };\n    if (trans.amount <= 0) {\n      this.notifyNoInputValue();\n      return;\n    }\n    if (this.state.balance < trans.amount) {\n      this.notifyNoCost();\n      return;\n    }\n    this.setState(state => ({\n      transactions: [...state.transactions, transaction],\n      balance:\n        name === 'withdrawal'\n          ? state.balance - trans.amount\n          : state.balance + trans.amount,\n    }));\n    event.target.parentNode.reset();\n  };\n\n  handleTotalAmount = type => {\n    const { transactions } = this.state;\n    const amount = transactions\n      .filter(transaction => transaction.type === type)\n      .reduce((acc, transaction) => {\n        return transaction.amount + acc;\n      }, 0);\n\n    return amount;\n  };\n\n  render() {\n    const { transactions, balance } = this.state;\n    return (\n      <div className={styles.DashboardWrapper}>\n        <Controls onAddTransaction={this.onAddTransaction} />\n        <Balance handleTotalAmount={this.handleTotalAmount} balance={balance} />\n        <TransactionHistory items={transactions} />\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport styles from './App.module.css';\nimport Dashboard from '../../Containers/Dashboard/Dashboard';\n\nconst App = () => (\n  <div className={styles.App}>\n    <Dashboard />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// eslint-disable-next-line import/extensions\nimport App from './Components/App/App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}