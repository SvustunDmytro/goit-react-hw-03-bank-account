{"version":3,"sources":["Components/Controls/Controls.module.css","Components/TransactionHistory/TransactionHistory.module.css","Containers/Dashboard/Dashboard.module.css","Components/Balance/Balance.module.css","Components/Controls/Controls.jsx","Components/Balance/Balance.jsx","Components/TransactionHistory/TransactionHistory.jsx","Containers/Dashboard/Dashboard.jsx","Components/App/App.jsx","index.js"],"names":["module","exports","Controls","state","amount","handleChange","e","setState","target","name","value","handleSubmitAdd","event","preventDefault","props","onAddTransaction","handleSubmitWith","onWithdrawTransaction","className","styles","form","type","onChange","this","controls","onClick","Component","Balance","income","expenses","balance","BalanceWrapper","clientBalance","clientBalance__col","defaultProps","TransactionHistory","items","table","length","map","el","key","id","date","uuidv4","require","Dashboard","transactions","notifyNoInputValue","toast","notifyNoCost","onDeposit","trans","transaction","Date","toLocaleDateString","Number","onWithdraw","filter","reduce","a","b","prevTransactions","localStorage","getItem","prevBalance","JSON","parse","prevProps","prevState","setItem","stringify","DashboardWrapper","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06d75782.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Controls_form__m1YjM\",\"controls\":\"Controls_controls__1bybP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TransactionHistory_table__16cWo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DashboardWrapper\":\"Dashboard_DashboardWrapper__2ydPZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BalanceWrapper\":\"Balance_BalanceWrapper__34ob_\",\"clientBalance\":\"Balance_clientBalance__14P-s\",\"clientBalance__col\":\"Balance_clientBalance__col__1CzFy\"};","/* eslint-disable react/state-in-constructor */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Controls.module.css';\n\nexport default class Controls extends Component {\n  state = {\n    amount: 0,\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmitAdd = event => {\n    event.preventDefault();\n\n    this.props.onAddTransaction({ ...this.state });\n  };\n\n  handleSubmitWith = event => {\n    event.preventDefault();\n\n    this.props.onWithdrawTransaction({ ...this.state });\n  };\n\n  render() {\n    return (\n      <form className={styles.form}>\n        <input type=\"number\" name=\"amount\" onChange={this.handleChange} />\n        <button\n          className={styles.controls}\n          type=\"submit\"\n          onClick={this.handleSubmitAdd}\n        >\n          Deposit\n        </button>\n        <button\n          className={styles.controls}\n          type=\"submit\"\n          onClick={this.handleSubmitWith}\n        >\n          Withdraw\n        </button>\n      </form>\n    );\n  }\n}\n\nControls.propTypes = {\n  onAddTransaction: PropTypes.func.isRequired,\n  onWithdrawTransaction: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Balance.module.css';\n\nconst Balance = ({ income, expenses, balance }) => (\n  <div className={styles.BalanceWrapper}>\n    <div className={styles.clientBalance}>\n      <div className={styles.clientBalance__col}>&#8593;{income()}</div>\n      <div className={styles.clientBalance__col}>&#8595;{expenses()}</div>\n      <div className={styles.clientBalance__col}>Balance: {balance}</div>\n    </div>\n  </div>\n);\n\nBalance.propTypes = {\n  income: PropTypes.func.isRequired,\n  expenses: PropTypes.func.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nBalance.defaultProps = {\n  // bla: 'test',\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => (\n  <div className=\"TransactionHistoryWrapper\">\n    <table className={styles.table}>\n      <thead>\n        <tr>\n          <td>TRANSACTION</td>\n          <td>AMOUNT</td>\n          <td>DATE</td>\n        </tr>\n      </thead>\n      {items.length > 0 &&\n        items.map(el => (\n          <tr key={el.id}>\n            <td>{el.type}</td>\n            <td>{el.amount}</td>\n            <td>{el.date}</td>\n          </tr>\n        ))}\n    </table>\n  </div>\n);\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","/* eslint-disable react/state-in-constructor */\nimport React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Controls from '../../Components/Controls/Controls';\nimport Balance from '../../Components/Balance/Balance';\nimport TransactionHistory from '../../Components/TransactionHistory/TransactionHistory';\nimport 'react-toastify/dist/ReactToastify.css';\nimport styles from './Dashboard.module.css';\n\nconst uuidv4 = require('uuid/v4');\n\nexport default class Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n  };\n\n  componentDidMount() {\n    const prevTransactions = localStorage.getItem('transactions');\n    const prevBalance = localStorage.getItem('balance');\n\n    if (prevTransactions) {\n      const transactions = JSON.parse(prevTransactions);\n\n      this.setState({ transactions });\n    }\n    if (prevBalance) {\n      const balance = JSON.parse(prevBalance);\n\n      this.setState({ balance });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { transactions, balance } = this.state;\n\n    if (prevState.transactions !== transactions) {\n      localStorage.setItem('transactions', JSON.stringify(transactions));\n    }\n    if (prevState.balance !== balance) {\n      localStorage.setItem('balance', JSON.stringify(balance));\n    }\n  }\n\n  notifyNoInputValue = () => toast('Введите сумму для проведения операции!');\n\n  notifyNoCost = () =>\n    toast('На счету недостаточно средств для проведения операции!');\n\n  onDeposit = trans => {\n    const transaction = {\n      ...trans,\n      id: uuidv4(),\n      type: 'Deposit',\n      date: new Date().toLocaleDateString(),\n    };\n    if (Number(trans.amount) <= 0) {\n      this.notifyNoInputValue();\n      return;\n    }\n    this.setState(state => ({\n      transactions: [...state.transactions, transaction],\n      balance: Number(state.balance) + Number(trans.amount),\n    }));\n  };\n\n  onWithdraw = trans => {\n    const transaction = {\n      ...trans,\n      id: uuidv4(),\n      type: 'Withdrawal',\n      date: new Date().toLocaleDateString(),\n    };\n    if (Number(trans.amount) <= 0) {\n      this.notifyNoInputValue();\n      return;\n    }\n\n    if (this.state.balance < trans.amount) {\n      this.notifyNoCost();\n      return;\n    }\n    this.setState(state => ({\n      transactions: [...state.transactions, transaction],\n      balance: Number(state.balance) - Number(trans.amount),\n    }));\n  };\n\n  income = () => {\n    const incomeTrans = this.state.transactions.filter(\n      el => el.type === 'Deposit',\n    );\n    return incomeTrans.map(el => Number(el.amount)).reduce((a, b) => a + b, 0);\n  };\n\n  expenses = () => {\n    const expensesTrans = this.state.transactions.filter(\n      el => el.type === 'Withdrawal',\n    );\n    return expensesTrans\n      .map(el => Number(el.amount))\n      .reduce((a, b) => a + b, 0);\n  };\n\n  render() {\n    const { transactions, balance } = this.state;\n    return (\n      <div className={styles.DashboardWrapper}>\n        <Controls\n          onAddTransaction={this.onDeposit}\n          onWithdrawTransaction={this.onWithdraw}\n        />\n        <Balance\n          income={this.income}\n          expenses={this.expenses}\n          balance={balance}\n        />\n        <TransactionHistory items={transactions} />\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n","/* eslint-disable import/extensions */\nimport React from 'react';\nimport styles from './App.module.css';\nimport Dashboard from '../../Containers/Dashboard/Dashboard';\n\nconst App = () => (\n  <div className={styles.App}>\n    <Dashboard />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// eslint-disable-next-line import/extensions\nimport App from './Components/App/App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}